<?xml version="1.0" encoding="UTF-8"?>
<api context="/transaction" name="BankTransaction" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" url-mapping="/withdraw">
        <inSequence>
            <!-- Save the account id -->
            <property expression="$body//transaction/id" name="uri.var.accountId" scope="default" type="INTEGER"/>
            <property expression="$body//transaction/id" name="accountId" scope="default" type="INTEGER"/>
            <!-- Save the amount that needs to be withdrawn -->
            <property expression="$body//transaction/amount" name="withdrawAmount" scope="default" type="DOUBLE"/>
            <property action="remove" name="REST_URL_POSTFIX" scope="axis2"/>
            <header action="remove" name="Content-Type" scope="transport"/>
            <header action="remove" name="To" scope="default"/>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property name="ContentType" scope="axis2" type="STRING" value="application/json"/>
            <call>
                <endpoint>
                    <http method="post" uri-template="http://localhost:9090/bank/withdraw"/>
                </endpoint>
            </call>
            <filter source="json-eval($.success)" regex="Transaction was completed successfully">
			    <then>
			    	<!-- Transaction successful -->			    	 
			    	<property expression="json-eval($.message)" name="successMsg" scope="default" type="STRING"/>
		            <!-- Get the new balance -->
		            <call>
		                <endpoint>
		                    <http method="get" uri-template="http://localhost:9090/bank/accounts/{uri.var.accountId}"/>
		                </endpoint>
		            </call>
		            <property expression="json-eval($.balance)" name="updatedBalance" scope="default" type="STRING"/>
		            <!-- Upsert records  -->
		            <payloadFactory media-type="xml">
                    	<format>
                        	<_postaccount_upsert>
                            	<accountId>$1</accountId>
                                <balance>$2</balance>
                            </_postaccount_upsert>
                         </format>
                         <args>
                         	<arg evaluator="xml" expression="get-property('accountId')" literal="true"/>
                            <arg evaluator="xml" expression="get-property('updatedBalance')" literal="true"/>
                         </args>
                     </payloadFactory>
                     <call>
			         	<endpoint>
			            	<http method="post" uri-template="http://localhost:8280/services/AccountDataService/account/upsert"/>
			            </endpoint>
		            </call>
		            <!-- Update the customer with a success message -->
		            <payloadFactory media-type="json">
		            	<format>
		            		{"message" : "$1"}
		            	</format>
		            	<args>
		            		<arg expression="get-property('successMsg')"/>
		            	</args>
		            </payloadFactory>
		            <respond/>
			    </then>
			    <else>
			    	<!-- Transaction not successful -->
			    	<respond/>
			    </else>
			</filter>
        </inSequence>
        <outSequence>
            <send/>
        </outSequence>
        <faultSequence>
            <header action="remove" name="Content-Type" scope="transport"/>
            <call>
                <endpoint>
                    <http method="get" uri-template="http://localhost:8280/services/AccountDataService/accounts/{uri.var.accountId}"/>
                </endpoint>
            </call>
            <!-- Check if an account exists -->
            <filter xmlns:m0="http://ws.wso2.org/dataservice" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xpath="boolean(//soapenv:Body/m0:Entries/*[1])">
                <then>
                    <property expression="$body//m0:Entries/m0:Entry/m0:balance" name="currentBalance" scope="default" type="DOUBLE"/>
                    <filter xpath="get-property('currentBalance') > get-property('withdrawAmount')">
                        <then>
                            <property expression="get-property('currentBalance') - get-property('withdrawAmount')" name="newBalance" scope="default" type="DOUBLE"/>
                            <payloadFactory media-type="xml">
                                <format>
                                    <_putaccount>
                                        <accountId>$1</accountId>
                                        <balance>$2</balance>
                                        <updated>1</updated>
                                    </_putaccount>
                                </format>
                                <args>
                                    <arg evaluator="xml" expression="get-property('accountId')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('newBalance')" literal="true"/>
                                </args>
                            </payloadFactory>
                            <call>
                                <endpoint>
                                    <address uri="http://localhost:8280/services/AccountDataService/account"/>
                                </endpoint>
                            </call>
                            <!-- Update the balance and 'updated' flag to '1' -->
                            <payloadFactory media-type="json">
                                <format>
		                        { "message": "An amount of $1 was withdrawn from account with id $2. Available balance is $3"}
		                        </format>
                                <args>
                                    <arg evaluator="xml" expression="get-property('withdrawAmount')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('accountId')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('newBalance')" literal="true"/>
                                </args>
                            </payloadFactory>
                            <respond/>
                        </then>
                        <else>
                            <payloadFactory media-type="json">
                                <format>
										{ "error": "Cannot withdraw from account with id $1 since the balance is less than the amount to be withdrawn",
                                          "available balance" : "$2"}
									</format>
                                <args>
                                    <arg evaluator="xml" expression="get-property('accountId')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('currentBalance')" literal="true"/>
                                </args>
                            </payloadFactory>
                            <respond/>
                        </else>
                    </filter>
                    <respond/>
                    <!-- Check if the current balance is greater than the withdraw amount -->
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>{ "error": "No account associated with id $1" }</format>
                        <args>
                            <arg evaluator="xml" expression="get-property('accountId')" literal="true"/>
                        </args>
                    </payloadFactory>
                    <respond/>
                </else>
            </filter>
            <respond/>
        </faultSequence>
    </resource>
</api>
